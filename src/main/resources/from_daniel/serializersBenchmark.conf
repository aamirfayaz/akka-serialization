
akka {
  actor {
    provider = remote

    serializers {
      java = "akka.serialization.JavaSerializer"
      kryo = "com.romix.akka.serialization.kryo.KryoSerializer"
      avro = "from_daniel.part2_serialization.VoteAvroSerializer"
      proto = "akka.remote.serialization.ProtobufSerializer"
    }

    serialization-bindings {
      "from_daniel.part2_serialization.VoteEnd$" = java
      "com.google.protobuf.Message" = proto
      "from_daniel.part2_serialization.Vote" = kryo // set up kryo and avro
    }

    kryo {
      type = "nograph"
      idstrategy = "incremental"
      kryo-trace = false
      implicit-registration-logging = false
      use-manifests = false
      classes = [
        "from_daniel.part2_serialization.Vote",
        "from_daniel.part2_serialization.VoteEnd$"
      ]
    }
  }

  remote {
    artery {
      enabled = on
      transport = aeron-udp
      canonical.hostname = "localhost"

      advanced {
        outbound-message-queue-size = 1000100
      }
    }
  }
}