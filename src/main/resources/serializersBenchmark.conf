akka {
  actor {
    provider = remote

    serializers {
      java = "akka.serialization.JavaSerializer"
      kryo = "com.romix.akka.serialization.kryo.KryoSerializer"
      avro = "learning.VoteAvroSerializer"
      proto = "akka.remote.serialization.ProtobufSerializer"
    }

    serialization-bindings {
      "learning.VoteEnd$" = java # reason we want to differentiate on votes only.
      "com.google.protobuf.Message" = proto
      "learning.Vote" = kryo # set up kryo and avro and java
    }

    kryo {
      type = "nograph"
      idstrategy = "incremental"
      kryo-trace = false
      implicit-registration-logging = false
      use-manifests = false
      classes = [
        "learning.Vote",
        "learning.VoteEnd$"
      ]
    }
  }

  remote {
    artery {
      enabled = on
      transport = aeron-udp
      canonical.hostname = "localhost"

      advanced {
        outbound-message-queue-size = 1000100 #past million, to avoid dropping of messages in burst
      }
    }
  }
}